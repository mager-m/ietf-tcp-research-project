<!-- YANG models: https://github.com/clicon/clixon/tree/master/yang/clixon -->

<clixon-config xmlns="http://clicon.org/config">
    <!--
         >>> General <<<
    -->

    <!-- The configure file itself. Due to bootstrapping reasons, its value is meaningless in a file but can be useful for documentation purposes. -->
    <CLICON_CONFIGFILE>/dev/null/this-value-is-not-used.xml</CLICON_CONFIGFILE>

    <!-- Startup Modes: none, init, running, startup -->
    <CLICON_STARTUP_MODE>init</CLICON_STARTUP_MODE>

    <!-- Process-id file of backend daemon -->
    <CLICON_BACKEND_PIDFILE>/usr/local/var/clixon-plugin-tcp/example.pidfile</CLICON_BACKEND_PIDFILE>

    <CLICON_SOCK_GROUP>root</CLICON_SOCK_GROUP>


    <!--
         >>> Plugin Directories  <<<
    -->

    <!-- Location of backend .so plugins. Load all .so plugins in this dir as backend plugins -->
    <CLICON_BACKEND_DIR>/home/sima/src/clixon-plugin-tcp/cmake-build-debug</CLICON_BACKEND_DIR>


    <!--
         >>> Yang <<<
    -->

    <!-- A list of directories (yang dir path) where Clixon searches for module and submodules. -->
    <CLICON_YANG_DIR>/usr/local/share/clixon</CLICON_YANG_DIR>

    <!-- Specifies a single module to load. The module is searched for in the yang dir path.. -->
    <CLICON_YANG_MODULE_MAIN>ietf-tcp</CLICON_YANG_MODULE_MAIN>

    <!-- CLICON_FEATURE is a list of values, describing how Clixon supports feature. -->
    <CLICON_FEATURE>ietf-tcp:statistics</CLICON_FEATURE>

    <!--
         >>> CLI  <<<
    -->

    <!-- Directory containing frontend cli loadable plugins. Load all .so plugins in this directory as CLI object plugins. -->
    <CLICON_CLI_DIR>/home/sima/src/clixon-plugin-tcp/cmake-build-debug</CLICON_CLI_DIR>

    <!-- Directory containing frontend cligen spec files. Load all .cli files in this directory as CLI specification files. -->
    <CLICON_CLISPEC_DIR>/home/sima/src/clixon-plugin-tcp</CLICON_CLISPEC_DIR>

    <!-- Generate code for CLI completion of existing db symbols. If set to 0, the expand rules will not be generated. -->
    <CLICON_CLI_GENMODEL_COMPLETION>1</CLICON_CLI_GENMODEL_COMPLETION>

    <!-- How to generate and show CLI syntax. VARS = Keywords on non-key variables: x y <k> -->
    <CLICON_CLI_GENMODEL_TYPE>VARS</CLICON_CLI_GENMODEL_TYPE>

    <!-- Set to 0 if you want CLI to wrap to next line. Set to 1 if you want CLI to scroll sideways when approaching right margin (default). -->
    <CLICON_CLI_LINESCROLLING>0</CLICON_CLI_LINESCROLLING>


    <!--
         >>> Sockets  <<<
    -->

    <!-- If family above is AF_UNIX: Unix socket for communicating with clixon_backend. -->
    <CLICON_SOCK>/usr/local/var/clixon-plugin-tcp/example.sock</CLICON_SOCK>


    <!--
         >>> Datastore <<<
    -->

    <!-- The mandatory CLICON_XMLDB_DIR option determines where the datastores are placed -->
    <CLICON_XMLDB_DIR>/usr/local/var/clixon-plugin-tcp</CLICON_XMLDB_DIR>


    <!--
        >>> Optional Flags <<<
    -->

    <!-- Enable RFC 7895 YANG Module library support as state data. If enabled, module info will appear when doing netconf get or restconf GET -->
    <CLICON_MODULE_LIBRARY_RFC7895>false</CLICON_MODULE_LIBRARY_RFC7895>

    <CLICON_NETCONF_HELLO_OPTIONAL>true</CLICON_NETCONF_HELLO_OPTIONAL>

    <CLICON_XMLDB_UPGRADE_CHECKOLD>false</CLICON_XMLDB_UPGRADE_CHECKOLD>

</clixon-config>
